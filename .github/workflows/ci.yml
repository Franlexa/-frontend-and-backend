name: ci

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  frontend-unit-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16, 18, 20] # Node.js versions to test
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/checkout@v3
      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-
      - name: Install frontend modules
        run: npm run install:frontend
      - name: Run frontend unit tests ðŸ§ª
        run: npm run test:frontend:unit

  api-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install Backend modules
        uses: cypress-io/github-action@v5
        with:
          install-command: npm run install:backend
          runTests: false
      - name: Install Frontend modules
        uses: cypress-io/github-action@v5
        with:
          install-command: npm run install:frontend
          runTests: false
      - name: Run API tests ðŸ§ª
        uses: cypress-io/github-action@v5
        with:
          start: npm run start:frontend, npm run start:server
          command: npm run test:api

  frontend-tests:
    needs: frontend-unit-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install Frontend modules
        uses: cypress-io/github-action@v5
        with:
          install-command: npm run install:frontend
          runTests: false
      - name: Run Frontend UI tests ðŸ§ª
        uses: cypress-io/github-action@v5
        with:
          start: npm run start:frontend
          command: npm run test:frontend

  code-analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Step 1: Lint code for code style (e.g., ESLint for JavaScript)
      - name: Run ESLint
        run: |
          npm ci
          npm run lint

      # Step 2: Check for code smells using SonarCloud
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=YourProjectKey
            -Dsonar.organization=YourOrganization
            -Dsonar.host.url=https://sonarcloud.io
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Step 3: Scan for secrets in commits using TruffleHog
      - name: Check for secrets in commits
        uses: trufflesecurity/trufflehog@v3
        with:
          scan: git
          branches: all

  notify-failure:
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Send Slack notification on failure
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"Build failed in job: ${{ github.job }}!"}' $SLACK_WEBHOOK_URL
